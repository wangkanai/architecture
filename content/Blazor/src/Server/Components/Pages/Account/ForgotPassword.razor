@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.UI.Services
@using Microsoft.AspNetCore.WebUtilities
@using Wangkanai.Architecture.Identity

@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender EmailSender

<PageTitle>Forgot your password?</PageTitle>

<h1>Forgot your password?</h1>
<h2>Enter your email.</h2>
<hr />
<div class="row">
	<div class="col-md-4">
		<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger" />

			<div class="form-floating mb-3">
				<InputText id="email" @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
				<label for="email" class="form-label">Email</label>
				<ValidationMessage For="() => Input.Email" class="text-danger" />
			</div>
			<button type="submit" class="w-100 btn btn-lg btn-primary">Reset password</button>
		</EditForm>
	</div>
</div>

@code {

	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	private async Task OnValidSubmitAsync()
	{
		ApplicationUser? user = await UserManager.FindByEmailAsync(Input.Email);
		if (user is null || !await UserManager.IsEmailConfirmedAsync(user))
		{
	// Don't reveal that the user does not exist or is not confirmed
			RedirectManager.RedirectTo("/Account/ForgotPasswordConfirmation");
			return;
		}

	// For more information on how to enable account confirmation and password reset please
	// visit https://go.microsoft.com/fwlink/?LinkID=532713
		string? code = await UserManager.GeneratePasswordResetTokenAsync(user);
		code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
		string? callbackUrl = NavigationManager.GetUriWithQueryParameters(
			$"{NavigationManager.BaseUri}Account/ResetPassword",
			new Dictionary<string, object?> { { "code", code } });

		await EmailSender.SendEmailAsync(
			Input.Email,
			"Reset Password",
			$"Please reset your password by <a href='{HtmlEncoder.Default.Encode(callbackUrl)}'>clicking here</a>.");

		RedirectManager.RedirectTo("/Account/ForgotPasswordConfirmation");
	}

	private sealed class InputModel
	{
		[Required]
		[EmailAddress]
		public string Email { get; set; } = default!;
	}

}