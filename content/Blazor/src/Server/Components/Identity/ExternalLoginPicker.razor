@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Wangkanai.Architecture.Components.Pages.Account
@using Wangkanai.Architecture.Data
@using Wangkanai.Architecture.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if ((_externalLogins?.Count ?? 0) == 0)
{
	<div>
		<p>
			There are no external authentication services configured. See this
			<a href="https://go.microsoft.com/fwlink/?LinkID=532715">
				article
				about setting up this ASP.NET application to support logging in via external services
			</a>.
		</p>
	</div>
}
else
{
	<form id="external-account" class="form-horizontal" action="/Account/PerformExternalLogin" method="post">
		<div>
			<AntiforgeryToken />
			<input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
			<p>
				@foreach (AuthenticationScheme? provider in _externalLogins!)
				{
					<button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
				}
			</p>
		</div>
	</form>
}

@code {
	private IList<AuthenticationScheme>? _externalLogins;

	[SupplyParameterFromQuery] private string ReturnUrl { get; set; } = default!;

	protected override async Task OnInitializedAsync()
	{
		ReturnUrl ??= "/";

		_externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
	}

}